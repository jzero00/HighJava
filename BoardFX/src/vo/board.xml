<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- namespace속성 : 아래에서 작성한 SQL문을 호출할 때 같이 사용된다 -->
<sqlMap namespace="board">
	<!-- 이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다. 사용할 수 있는 기본적인 태그들 <select> ~~~~ 
		</select> <insert> ~~~~ </insert> <update> ~~~~ </update> <delete> ~~~~ </delete> 
		위 태그에서 사용되는 속성들 1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름 
		2) parameterClass 속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다. (보통 VO클래스, 자바의 자료형 이름 
		사용된다.) (typeAlias로 지정한 alias명을 사용할 수 있다.) 3) resultClass 속성 : select문을 실행한 
		결과를 담을 객체를 지정한다.. (보통 VO 클래스나 자바의 자료형 이름을 사용한다.) -->

	<!-- 새로운 글 등록 -->
	<insert id="regPost" parameterClass="vo">

		INSERT INTO jdbc_board 
		(board_no, board_title, board_writer, board_date, board_content) 
		VALUES (BOARD_SEQ.NEXTVAL, #board_title#, #board_writer#, SYSDATE, #board_content#)

	</insert>

	<!-- 글 수정 -->
	<update id="updatePost" parameterClass="vo">

		UPDATE jdbc_board
		SET
		board_title = #board_title#,
		board_content = #board_content#
		WHERE board_no = #board_no#

	</update>

	<!-- 게시글 전체 목록 출력 -->
	<select id="getAllPostList" resultClass="vo">

SELECT *
FROM jdbc_board
ORDER BY board_no DESC
		
	</select>
	
	<delete id="deletePost" parameterClass="int">

		DELETE FROM jdbc_board
		WHERE board_no = #index#

	</delete>

</sqlMap>			





