<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- namespace속성 : 아래에서 작성한 SQL문을 호출할 때 같이 사용된다 -->
<sqlMap namespace="member">
	<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들 
		<select> ~~~~ </select>
		<insert> ~~~~ </insert>
		<update> ~~~~ </update>
		<delete> ~~~~ </delete> 
		
	위 태그에서 사용되는 속성들
		1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름 
		2) parameterClass 속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다. (보통 VO클래스, 자바의 자료형 이름 
		사용된다.) (typeAlias로 지정한 alias명을 사용할 수 있다.)
		3) resultClass 속성 : select문을 실행한 결과를 담을 객체를 지정한다.. (보통 VO 클래스나 자바의 자료형 이름을 사용한다.)
	-->

	<!-- insert 연습 -->
	<insert id="insertMember"
		parameterClass="kr.or.ddit.member.vo.MemberVO">

		INSERT INTO mymember (mem_id, mem_name, mem_tel,
		mem_addr)
		VALUES (#mem_id#,
		#mem_name#, #mem_tel#, #mem_addr#)

	</insert>

	<!-- update 연습 -->
	<update id="updateMember" parameterClass="memVO2">

		UPDATE mymember SET
		mem_name = #mem_name#,
		mem_tel = #mem_tel#,
		mem_addr = #mem_addr#
		WHERE
		mem_id = #mem_id#

	</update>

	<!-- delete 연습 -->
	<delete id="deleteMember" parameterClass="String">

		DELETE FROM mymember
		WHERE mem_id = #qwerty#

	</delete>

	<!-- SELECT 연습 -->
	<select id="getMemberAll" resultClass="memVO2">

		SELECT * FROM mymember

	</select>

	<select id="getMember" parameterClass="String" resultClass="int">

		SELECT COUNT(*) AS cnt FROM mymember WHERE mem_id = #mem_id#

	</select>

	<select id="getSearchMember" parameterClass="memVO2"
	resultClass="memVO2">
		SELECT * FROM mymember
		WHERE 1=1 
		<isNotEmpty property="mem_id">	<!-- null도 아니고 공백도 아닐때 실행 -->
		AND mem_id = #mem_id#
		</isNotEmpty>
		
		<isNotEmpty property="mem_name">
		AND mem_name = #mem_name#
		</isNotEmpty>
		
		<isNotEmpty property="mem_tel">	
		AND mem_tel = #mem_tel#
		</isNotEmpty>
		
		<isNotEmpty property="mem_addr">
		AND mem_addr LIKE '%' || #mem_addr# || '%'
		</isNotEmpty>
		

	</select>
</sqlMap>			





